variant: fcos
version: 1.3.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - %%SSH_PUBKEY%%

systemd:
  units:
    - name: cgroups-v2-karg.service
      enabled: true
      contents: |
        [Unit]
        Description=Switch To cgroups v2 and disable Docker
        # We run after `systemd-machine-id-commit.service` to ensure that
        # `ConditionFirstBoot=true` services won't rerun on the next boot.
        After=systemd-machine-id-commit.service
        ConditionKernelCommandLine=systemd.unified_cgroup_hierarchy
        ConditionPathExists=!/var/lib/cgroups-v2-karg.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/bin/systemctl disable --now docker.socket
        ExecStart=/bin/rpm-ostree kargs --delete=systemd.unified_cgroup_hierarchy
        ExecStart=/bin/touch /var/lib/cgroups-v2-karg.stamp
        ExecStart=/bin/systemctl --no-block reboot

        [Install]
        WantedBy=multi-user.target

    - name: pod-matrix.service
      enabled: true
      contents: |
        [Unit]
        Description=Creates a podman pod to run the matrix services.
        After=cgroups-v2-karg.service network-online.target
        Wants=cgroups-v2-karg.service network-online.target

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=sh -c 'podman pod exists matrix || podman pod create -n matrix -p 80:80 -p 443:443 -p 8448:8448'
        ExecStop=sh -c 'podman pod exists matrix && podman pod rm --force matrix'

        [Install]
        WantedBy=multi-user.target

    - name: container-postgresql.service
      enabled: true
      contents: |
        [Unit]
        Description=Run the database service for matrix
        Wants=network.target
        After=network-online.target pod-matrix.service
        Requires=pod-matrix.service

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        EnvironmentFile=/etc/postgresql_synapse
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/bin/rm -f %t/container-postgresql.pid %t/container-postgresql.ctr-id
        ExecStart=/bin/podman run \
            --conmon-pidfile %t/container-postgresql.pid \
            --cidfile %t/container-postgresql.ctr-id \
            --cgroups=no-conmon -d --replace \
            --pull=always \
            --rm \
            --read-only \
            --pod=matrix \
            --name=postgres \
            -e POSTGRES_USER=synapse \
            -e POSTGRES_DB=synapse \
            -e POSTGRES_INITDB_ARGS="--encoding='UTF8' --lc-collate='C' --lc-ctype='C'" \
            -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
            -v /var/srv/matrix/postgres:/var/lib/postgresql/data:z \
            docker.io/library/postgres:13 \
            -c listen_addresses='*'
        ExecStop=/usr/bin/podman stop --ignore --cidfile %t/container-postgresql.ctr-id -t 10
        ExecStopPost=/usr/bin/podman rm --ignore -f --cidfile %t/container-postgresql.ctr-id
        PIDFile=%t/container-postgresql.pid
        Type=forking

        [Install]
        WantedBy=multi-user.target

    - name: container-synapse.service
      enabled: true
      contents: |
        [Unit]
        Description=Run the synapse service.
        Wants=network.target
        After=network-online.target pod-matrix.service
        Requires=pod-matrix.service

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/bin/rm -f %t/container-synapse.pid %t/container-synapse.ctr-id
        ExecStart=/bin/podman run \
            --conmon-pidfile %t/container-synapse.pid \
            --cidfile %t/container-synapse.ctr-id \
            --cgroups=no-conmon -d --replace \
            --pull=always \
            --rm \
            --read-only \
            --pod=matrix \
            --name=synapse \
            -v /var/srv/matrix/synapse:/data:z \
            docker.io/matrixdotorg/synapse:latest
        ExecStop=/usr/bin/podman stop --ignore --cidfile %t/container-synapse.ctr-id -t 10
        ExecStopPost=/usr/bin/podman rm --ignore -f --cidfile %t/container-synapse.ctr-id
        PIDFile=%t/container-synapse.pid
        Type=forking

        [Install]
        WantedBy=multi-user.target

    - name: container-nginx.service
      enabled: true
      contents: |
        [Unit]
        Description=Run the nginx server
        Wants=network.target
        After=network-online.target pod-matrix.service certbot-firstboot.service
        Requires=pod-matrix.service certbot-firstboot.service

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/bin/rm -f %t/container-nginx.pid %t/container-nginx.ctr-id
        ExecStart=/bin/podman run \
            --conmon-pidfile %t/container-nginx.pid \
            --cidfile %t/container-nginx.ctr-id \
            --cgroups=no-conmon -d --replace \
            --pull=always \
            --rm \
            --read-only \
            --pod=matrix \
            --name=nginx \
            --tmpfs /var/cache/nginx \
            --volume /var/srv/matrix/nginx/nginx.conf:/etc/nginx/nginx.conf:ro,z \
            --volume /var/srv/matrix/nginx/dhparam:/etc/nginx/dhparam:ro,z \
            --volume /var/srv/matrix/letsencrypt-webroot:/var/www:ro,z \
            --volume /var/srv/matrix/letsencrypt-certs:/etc/letsencrypt:ro,z \
            --volume /var/srv/matrix/well-known:/var/well-known:ro,z \
            docker.io/nginx:stable
        ExecStop=/usr/bin/podman stop --ignore --cidfile %t/container-nginx.ctr-id -t 10
        ExecStopPost=/usr/bin/podman rm --ignore -f --cidfile %t/container-nginx.ctr-id
        PIDFile=%t/container-nginx.pid
        Type=forking

        [Install]
        WantedBy=multi-user.target

    - name: certbot-firstboot.service
      enabled: true
      contents: |
        [Unit]
        Description=Run certbot to get certificates from Let's Encrypt
        ConditionPathExists=!/var/srv/matrix/letsencrypt-certs/archive
        After=network-online.target pod-matrix.service container-nginx-http.service
        Wants=network-online.target
        Requires=pod-matrix.service container-nginx-http.service

        [Service]
        Type=oneshot
        ExecStart=/bin/podman run \
            --rm \
            --cap-drop all \
            --pod=matrix \
            --name=certbot \
            --volume /var/srv/matrix/letsencrypt-webroot:/var/lib/letsencrypt:rw,z \
            --volume /var/srv/matrix/letsencrypt-certs:/etc/letsencrypt:rw,z \
            docker.io/certbot/certbot:latest \
            --agree-tos --webroot certonly

        [Install]
        WantedBy=multi-user.target

    - name: container-nginx-http.service
      enabled: true
      contents: |
        [Unit]
        Description=Run the nginx HTTP server for Let's Encrypt bootstrap
        Wants=network.target
        After=network-online.target pod-matrix.service
        Requires=pod-matrix.service

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/bin/rm -f %t/container-nginx-http.pid %t/container-nginx-http.ctr-id
        ExecStart=/bin/podman run \
            --conmon-pidfile %t/container-nginx-http.pid \
            --cidfile %t/container-nginx-http.ctr-id \
            --cgroups=no-conmon -d --replace \
            --rm \
            --pull=always \
            --read-only \
            --pod=matrix \
            --name=nginx-http \
            --tmpfs /var/cache/nginx \
            --volume /var/srv/matrix/letsencrypt-webroot:/var/www:ro,z \
            --volume /var/srv/matrix/nginx-http/nginx.conf:/etc/nginx/nginx.conf:ro,z \
            docker.io/nginx:stable
        ExecStop=/usr/bin/podman stop --ignore --cidfile %t/container-nginx-http.ctr-id -t 10
        ExecStopPost=/usr/bin/podman rm --ignore -f --cidfile %t/container-nginx-http.ctr-id
        PIDFile=%t/container-nginx-http.pid
        Type=forking

        [Install]
        WantedBy=multi-user.target

    - name: container-element-web.service
      enabled: true
      contents: |
        [Unit]
        Description=Run the element-web container
        Wants=network.target
        After=network-online.target pod-matrix.service container-nginx.service
        Requires=pod-matrix.service container-nginx.service

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=/bin/rm -f %t/container-element-web.pid %t/container-element-web.ctr-id
        ExecStart=/bin/podman run \
            --conmon-pidfile %t/container-element-web.pid \
            --cidfile %t/container-element-web.ctr-id \
            --cgroups=no-conmon -d --replace \
            --rm \
            --pull=always \
            --read-only \
            --pod=matrix \
            --name=element-web \
            --tmpfs /var/cache/nginx \
            --volume /var/srv/matrix/element-web/nginx.conf:/etc/nginx/nginx.conf:ro,z \
            --volume /var/srv/matrix/element-web/config.json:/app/config.json:ro,z \
            docker.io/vectorim/element-web:latest
        ExecStop=/usr/bin/podman stop --ignore --cidfile %t/container-element-web.ctr-id -t 10
        ExecStopPost=/usr/bin/podman rm --ignore -f --cidfile %t/container-element-web.ctr-id
        PIDFile=%t/container-element-web.pid
        Type=forking

        [Install]
        WantedBy=multi-user.target

    - name: certbot.timer
      enabled: true
      contents: |
        [Unit]
        Description=Weekly check for Let's Encrypt's certificates renewal

        [Timer]
        OnCalendar=Sun *-*-* 02:00:00
        Persistent=true

        [Install]
        WantedBy=timers.target

    - name: certbot.service
      enabled: false
      contents: |
        [Unit]
        Description=Let's Encrypt certificate renewal
        ConditionPathExists=/var/srv/matrix/letsencrypt-certs/archive
        After=network-online.target pod-matrix.service container-nginx-http.service
        Wants=network-online.target
        Requires=pod-matrix.service container-nginx-http.service

        [Service]
        Type=oneshot
        ExecStart=/bin/podman run \
            --rm \
            --pull=always \
            --cap-drop all \
            --pod=matrix \
            --name=certbot \
            --volume /var/srv/matrix/letsencrypt-webroot:/var/lib/letsencrypt:rw,z \
            --volume /var/srv/matrix/letsencrypt-certs:/etc/letsencrypt:rw,z \
            docker.io/certbot/certbot:latest \
            renew
        ExecStartPost=/bin/systemctl restart --no-block container-nginx.service

storage:
  directories:
    - path: /var/srv/matrix
      mode: 0700
    - path: /var/srv/matrix/synapse/media_store
      mode: 0777
    - path: /var/srv/matrix/postgres
    - path: /var/srv/matrix/letsencrypt-webroot
  trees:
    - local: synapse
      path: /var/srv/matrix/synapse
    - local: nginx
      path: /var/srv/matrix/nginx
    - local: nginx-http
      path: /var/srv/matrix/nginx-http
    - local: letsencrypt-certs
      path: /var/srv/matrix/letsencrypt-certs
    - local: well-known
      path: /var/srv/matrix/well-known
    - local: element-web
      path: /var/srv/matrix/element-web
  files:
    - path: /etc/postgresql_synapse
      contents:
        local: postgresql_synapse
      mode: 0700
